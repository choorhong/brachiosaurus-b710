import { RequestHandler } from 'express'
import User from '../db/models/user'
import { ErrorMessage } from '../types/error'
import { ROLES, STATUS } from '../types/user'
import { BaseController } from './base'

export default class AuthController extends BaseController {
  public createOrFindUser: RequestHandler = async (req, res, next) => {
    try {
      const { firebaseUser } = res.locals
      if (!firebaseUser) throw new Error()

      const [user, created] = await User.findOrCreate({
        where: { email: firebaseUser.email },
        defaults: {
          // id: userId, // will be auto generated by the db
          name: firebaseUser.name,
          firebaseUserId: firebaseUser.firebaseUserId,
          email: firebaseUser.email,
          role: ROLES.EXECUTIVE,
          status: STATUS.PENDING
        }
      })
      // If user has just been created
      if (created) return this.created(res, user)

      // User exists > next (Eg: when user refreshes the page)
      this.ok(res, user)
      next()
    } catch (err) {
      console.log('err', err)
      return this.unauthorized(res, ErrorMessage.INVALID_OR_EXPIRED_TOKEN)
    }
  }
}
